/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    macros {
        goback: goback {
            compatible = "zmk,behavior-macro";
            label = "GOBACK";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp LS(LC(LEFT)) &kp BACKSPACE>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // | ESC/~ |  Q   |  W   |  E   |  R   |  T   |   Y   |  U    |  I   |  O   |   P   | BSPC  |
            // | TAB   |  A   |  S   |  D   |  F   |  G   |   H   |  J    |  K   |  L   |   ;   |  '    |
            // | SHIFT |  Z   |  X   |  C   |  V   |  B   |   N   |  M    |  ,   |  .   |   /   |RET/SFT|
            // | PLAY  | LCTL | LALT | LGUI | LOWR |     SPACE    |  RAIS | LARW | UARW | DARW  |  RARW |

            bindings = <
   &gresc      &kp Q         &kp W         &kp E        &kp R      &kp T          &kp Y            &kp U      &kp I    &kp O     &kp P        &goback
  &kp TAB      &kp A         &kp S         &kp D        &kp F      &kp G          &kp H            &kp J      &kp K    &kp L  &kp SEMI        &kp SQT
&kp LSHFT      &kp Z         &kp X         &kp C        &kp V      &kp B          &kp N            &kp M  &kp COMMA  &kp DOT  &kp FSLH  &mt RSHFT RET
&kp LCTRL  &kp ENTER  &kp LEFT_GUI  &kp LEFT_ALT  &lt 1 SPACE  &kp SPACE  &kp BACKSPACE  &lt 2 BACKSPACE   &kp LEFT   &kp UP  &kp DOWN      &kp RIGHT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        lower {
            bindings = <
&kp LS(GRAVE)       &kp N1    &kp N2      &kp N3     &kp N4    &kp N5        &kp N6     &kp N7      &kp N8            &kp N9             &kp N0     &kp DEL
       &trans  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp CARET  &kp AMPS  &kp ASTERISK  &kp UNDER    &kp PLUS  &kp LEFT_BRACKET  &kp RIGHT_BRACKET    &kp PIPE
       &trans       &trans    &trans      &trans     &trans    &trans        &trans     &trans      &trans            &trans    &kp EXCLAMATION      &trans
       &trans       &trans    &trans      &trans     &trans    &trans        &trans      &mo 3  &kp C_PREV          &kp HOME            &kp END  &kp C_NEXT
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
        };

        raise {
            bindings = <
&kp F11  &kp F1  &kp F2  &kp F3  &kp F4    &kp F5         &kp F6     &kp F7      &kp F8                &kp F9                &kp F10     &kp F12
 &trans  &trans  &trans  &trans  &trans  &kp HOME    &kp PAGE_UP  &kp MINUS   &kp EQUAL  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &kp BSLH
 &trans  &trans  &trans  &trans  &trans   &kp END  &kp PAGE_DOWN     &trans      &trans                &trans                 &trans      &trans
 &trans  &trans  &trans  &trans   &mo 3    &trans         &trans     &trans  &kp C_PREV          &kp C_VOL_UP           &kp C_VOL_DN  &kp C_NEXT
            >;

            sensor-bindings = <&inc_dec_kp C_BRI_DEC C_BRI_INC>;
        };

        control {
            bindings = <
     &sys_reset     &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4  &trans  &trans      &trans  &trans  &trans  &bt BT_CLR
&rgb_ug RGB_TOG  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &rgb_ug RGB_EFF  &trans  &trans      &trans  &trans  &trans      &trans
         &trans  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &rgb_ug RGB_EFR  &trans  &trans      &trans  &trans  &trans      &trans
    &bootloader           &trans           &trans           &trans           &trans           &trans  &trans  &trans  &bt BT_PRV  &trans  &trans  &bt BT_NXT
            >;

            sensor-bindings = <&inc_dec_kp LG(MINUS) LG(PLUS)>;
        };
    };
};
