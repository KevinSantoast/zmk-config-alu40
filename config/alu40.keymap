/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    macros {
        goback: goback {
            compatible = "zmk,behavior-macro";
            label = "GOBACK";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LS(LC(LEFT)) &kp BACKSPACE>;
        };
    };

    combos {
        compatible = "zmk,combos";

        layer1 {
            bindings = <&mo 1>;
            key-positions = <40 4>;
        };

        layer2 {
            bindings = <&mo 2>;
            key-positions = <43 7>;
        };

        layer3 {
            bindings = <&mo 3>;
            key-positions = <40 43>;
        };

        pageup {
            bindings = <&kp PAGE_UP>;
            key-positions = <3 15>;
            timeout-ms = <15>;
        };

        pagedn {
            bindings = <&kp PAGE_DOWN>;
            key-positions = <1 13>;
            timeout-ms = <15>;
        };

        mute {
            bindings = <&kp C_MUTE>;
            key-positions = <47 46>;
        };

        shifttab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 0>;
            timeout-ms = <15>;
        };

        playpause {
            bindings = <&kp C_PLAY_PAUSE>;
            key-positions = <35 23>;
        };

        previous {
            bindings = <&kp C_PREV>;
            key-positions = <11 23>;
        };

        next {
            bindings = <&kp C_NEXT>;
            key-positions = <47 35>;
        };

        brightnessup {
            bindings = <&kp C_BRIGHTNESS_INC>;
            key-positions = <46 45>;
        };

        brightnessdn {
            bindings = <&kp C_BRIGHTNESS_DEC>;
            key-positions = <45 44>;
        };

        screenshot {
            bindings = <&kp LG(LS(S))>;
            key-positions = <11 10>;
        };

        bootloader {
            bindings = <&bootloader>;
            key-positions = <0 11 47 36>;
        };

        n1 {
            bindings = <&kp NUMBER_1>;
            key-positions = <1 0>;
            timeout-ms = <15>;
            layers = <0>;
        };

        n2 {
            bindings = <&kp NUMBER_2>;
            key-positions = <2 1>;
            timeout-ms = <15>;
            layers = <0>;
        };

        n3 {
            bindings = <&kp NUMBER_3>;
            key-positions = <3 2>;
            timeout-ms = <15>;
            layers = <0>;
        };

        n4 {
            bindings = <&kp NUMBER_4>;
            key-positions = <3 4>;
            timeout-ms = <15>;
            layers = <0>;
        };

        n5 {
            bindings = <&kp N5>;
            key-positions = <12 13>;
            timeout-ms = <15>;
            layers = <0>;
        };

        n6 {
            bindings = <&kp NUMBER_6>;
            key-positions = <13 14>;
            timeout-ms = <15>;
            layers = <0>;
        };

        n7 {
            bindings = <&kp N7>;
            key-positions = <14 15>;
            timeout-ms = <15>;
            layers = <0>;
        };

        n8 {
            bindings = <&kp N8>;
            key-positions = <15 16>;
            timeout-ms = <15>;
            layers = <0>;
        };

        n9 {
            bindings = <&kp N9>;
            key-positions = <24 25>;
            timeout-ms = <15>;
            layers = <0>;
        };

        n0 {
            bindings = <&kp N0>;
            key-positions = <25 26>;
            timeout-ms = <15>;
            layers = <0>;
        };

        f1 {
            bindings = <&kp F1>;
            key-positions = <1 0>;
            timeout-ms = <15>;
            layers = <1>;
        };

        f2 {
            bindings = <&kp F2>;
            key-positions = <2 1>;
            timeout-ms = <15>;
            layers = <1>;
        };

        f3 {
            bindings = <&kp F3>;
            key-positions = <3 2>;
            timeout-ms = <15>;
            layers = <1>;
        };

        f4 {
            bindings = <&kp F4>;
            key-positions = <3 4>;
            timeout-ms = <15>;
            layers = <1>;
        };

        f5 {
            bindings = <&kp F5>;
            key-positions = <12 13>;
            timeout-ms = <15>;
            layers = <1>;
        };

        f6 {
            bindings = <&kp F6>;
            key-positions = <13 14>;
            timeout-ms = <15>;
            layers = <1>;
        };

        f7 {
            bindings = <&kp F7>;
            key-positions = <14 15>;
            timeout-ms = <15>;
            layers = <1>;
        };

        f8 {
            bindings = <&kp F8>;
            key-positions = <15 16>;
            timeout-ms = <15>;
            layers = <1>;
        };

        f9 {
            bindings = <&kp F9>;
            key-positions = <24 25>;
            timeout-ms = <15>;
            layers = <1>;
        };

        f10 {
            bindings = <&kp F10>;
            key-positions = <25 26>;
            timeout-ms = <15>;
            layers = <1>;
        };

        f11 {
            bindings = <&kp F11>;
            key-positions = <26 27>;
            timeout-ms = <15>;
            layers = <1>;
        };

        f12 {
            bindings = <&kp F12>;
            key-positions = <28 27>;
            timeout-ms = <15>;
            layers = <1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // | ESC/~ |  Q   |  W   |  E   |  R   |  T   |   Y   |  U    |  I   |  O   |   P   | BSPC  |
            // | TAB   |  A   |  S   |  D   |  F   |  G   |   H   |  J    |  K   |  L   |   ;   |  '    |
            // | SHIFT |  Z   |  X   |  C   |  V   |  B   |   N   |  M    |  ,   |  .   |   /   |RET/SFT|
            // | PLAY  | LCTL | LALT | LGUI | LOWR |     SPACE    |  RAIS | LARW | UARW | DARW  |  RARW |

            bindings = <
&kp TAB           &kp Q         &kp W         &kp E  &kp R      &kp T  &kp Y  &kp U          &kp I      &kp O                  &kp P         &goback
&kp LEFT_CONTROL  &kp A         &kp S         &kp D  &kp F      &kp G  &kp H  &kp J          &kp K      &kp L                  &kp SEMI      &kp SQT
&kp LSHFT         &kp Z         &kp X         &kp C  &kp V      &kp B  &kp N  &kp M          &kp COMMA  &kp DOT                &kp FSLH      &mt RSHFT RET
&kp ESCAPE        &kp LEFT_WIN  &kp LEFT_ALT  &mo 1  &kp SPACE  &none  &none  &kp BACKSPACE  &mo 2      &kp LS(LC(RIGHT_WIN))  &kp C_VOL_DN  &kp C_VOLUME_UP
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        lower {
            bindings = <
&kp GRAVE  &kp HOME  &kp UP    &kp END     &kp PAGE_UP    &kp INS        &kp STAR   &kp MINUS  &kp PLUS   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BACKSLASH
&kp ENTER  &kp LEFT  &kp DOWN  &kp RIGHT   &kp PAGE_DOWN  &kp DEL        &kp CARET  &kp UNDER  &kp EQUAL  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PIPE
&trans     &kp AT    &kp HASH  &kp DOLLAR  &kp PERCENT    &kp AMPERSAND  &trans     &trans     &trans     &trans                &kp EXCLAMATION        &trans
&trans     &trans    &trans    &trans      &trans         &trans         &trans     &kp DEL    &trans     &trans                &trans                 &trans
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
        };

        raise {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_BRI_DEC C_BRI_INC>;
        };

        control {
            bindings = <
&sys_reset       &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4     &trans  &trans  &trans      &trans  &trans  &bt BT_CLR
&rgb_ug RGB_TOG  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &rgb_ug RGB_EFF  &trans  &trans  &trans      &trans  &trans  &trans
&trans           &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &rgb_ug RGB_EFR  &trans  &trans  &trans      &trans  &trans  &trans
&bootloader      &trans           &trans           &trans           &trans           &trans           &trans  &trans  &bt BT_PRV  &trans  &trans  &bt BT_NXT
            >;

            sensor-bindings = <&inc_dec_kp LG(MINUS) LG(PLUS)>;
        };
    };
};
